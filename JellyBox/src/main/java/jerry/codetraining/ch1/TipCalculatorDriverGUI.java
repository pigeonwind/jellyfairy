package jerry.codetraining.ch1;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.function.Supplier;

/**
 * Created by jerryDev on 2016. 11. 23..
 */
class TipCalculatorDriverGUI implements ActionListener, ChangeListener {
    private JPanel tipCalculatorMainPanel;
    private JLabel billAmount, percentage;
    private JTextField billAmountTextField;
    private JSlider percentageSlider;
    private JTextArea outputTextArea;
    private SimpleTipCalculator calculator;

    private TipCalculatorDriverGUI(SimpleTipCalculator calculator) {
        this.calculator = calculator;
        billAmountTextField.addActionListener( this );
        percentageSlider.addChangeListener( this );
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            outputTextArea.setText( calculator.inputBillAmount( Integer.parseInt( billAmountTextField.getText() ) ).process().toString() );
        } catch (Exception e1) {
            JOptionPane.showMessageDialog( null, e1 );
        }
    }
    @Override
    public void stateChanged(ChangeEvent e) {
        try {
            outputTextArea.setText( calculator.inputPercentage( percentageSlider.getValue() ).process().toString() );
        } catch (Exception e1) {
            JOptionPane.showMessageDialog( null, e1 );
        }
    }

    public static void main(String[] args) {
        Supplier<SimpleTipCalculator> simpleTipCalculatorSupplier = SimpleTipCalculator::new;
        JFrame frame = new JFrame( "Tip Calculator Driver GUI" );
        frame.setContentPane( new TipCalculatorDriverGUI( simpleTipCalculatorSupplier.get() ).tipCalculatorMainPanel );
        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
        frame.pack();
        frame.setVisible( true );
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        tipCalculatorMainPanel = new JPanel();
        tipCalculatorMainPanel.setLayout( new GridBagLayout() );
        billAmountTextField = new JTextField();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        tipCalculatorMainPanel.add( billAmountTextField, gbc );
        billAmount = new JLabel();
        billAmount.setText( "BILL AMOUNT" );
        billAmount.setVerticalAlignment( 0 );
        billAmount.setVerticalTextPosition( 0 );
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        tipCalculatorMainPanel.add( billAmount, gbc );
        percentage = new JLabel();
        percentage.setText( "PERCENTAGE" );
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        tipCalculatorMainPanel.add( percentage, gbc );
        percentageSlider = new JSlider();
        percentageSlider.setMajorTickSpacing( 1 );
        percentageSlider.setMaximum( 20 );
        percentageSlider.setMinimum( 5 );
        percentageSlider.setMinorTickSpacing( 1 );
        percentageSlider.setPaintLabels( true );
        percentageSlider.setPaintTicks( true );
        percentageSlider.setValue( 5 );
        percentageSlider.setValueIsAdjusting( false );
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        tipCalculatorMainPanel.add( percentageSlider, gbc );
        outputTextArea = new JTextArea();
        outputTextArea.setEditable( false );
        outputTextArea.setRows( 2 );
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        tipCalculatorMainPanel.add( outputTextArea, gbc );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return tipCalculatorMainPanel;
    }
}
